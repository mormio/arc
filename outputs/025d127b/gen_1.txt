
    You are an AI tasked with solving Abstract Reasoning Corpus (ARC) problems. 
    You have access to a library of functions to help you solve these problems. 
    Your task is to propose a solution using these functions and any other new 
    functions you can choose to write. You may not need to use any of the functions 
    in the provided library. 

    Problem:
    Input 1: [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 6, 6, 6, 0, 0, 0, 0, 0], [0, 6, 0, 0, 6, 0, 0, 0, 0], [0, 0, 6, 0, 0, 6, 0, 0, 0], [0, 0, 0, 6, 0, 0, 6, 0, 0], [0, 0, 0, 0, 6, 6, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 0], [0, 0, 2, 0, 0, 2, 0, 0, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
Output 1: [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 6, 6, 6, 0, 0, 0, 0], [0, 0, 6, 0, 0, 6, 0, 0, 0], [0, 0, 0, 6, 0, 0, 6, 0, 0], [0, 0, 0, 0, 6, 0, 6, 0, 0], [0, 0, 0, 0, 6, 6, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 0, 0, 2, 0, 2, 0, 0, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]

Input 2: [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 8, 8, 8, 8, 8, 0, 0, 0], [0, 8, 0, 0, 0, 0, 8, 0, 0], [0, 0, 8, 0, 0, 0, 0, 8, 0], [0, 0, 0, 8, 0, 0, 0, 0, 8], [0, 0, 0, 0, 8, 8, 8, 8, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]
Output 2: [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 8, 8, 8, 8, 8, 0, 0], [0, 0, 8, 0, 0, 0, 0, 8, 0], [0, 0, 0, 8, 0, 0, 0, 0, 8], [0, 0, 0, 0, 8, 0, 0, 0, 8], [0, 0, 0, 0, 8, 8, 8, 8, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]



    Available functions:
    def flip_vertical(input: List[List[int]]) -> List[List[int]]:
    """
    Flips the input grid vertically.
    """

def duplicate_cols(input: List[List[int]], num_duplicates: int) -> List[List[int]]:
    """
    Duplicates each column in the input grid the specified number of times.
    """

def flip_horizontal(input: List[List[int]]) -> List[List[int]]:
    """
    Flips the input grid horizontally.
    """

def transpose(input: List[List[int]]) -> List[List[int]]:
    """
    Transposes the input grid.
    """

def rotate_90(input: List[List[int]]) -> List[List[int]]:
    """
    Rotates the input grid 90 degrees clockwise.
    """

def shift_cols(input: List[List[int]], shift: int) -> List[List[int]]:
    """
    Shifts each column in the input grid by the specified number of positions.
    """

def shift_rows(input: List[List[int]], shift: int) -> List[List[int]]:
    """
    Shifts each row in the input grid by the specified number of positions.
    """

def duplicate_rows(input: List[List[int]], num_duplicates: int) -> List[List[int]]:
    """
    Duplicates each row in the input grid the specified number of times.
    """



    Propose a solution to transform the input into the output. 
    Be specific about which functions you use and how you combine them. You do not need to
    import. Your solution should be a python function wrapped in ```.

    Your solution:
     ```python
def arc_problem(input_grid):
    # Rotate the grid 90 degrees clockwise
    rotated_grid = rotate_90(input_grid)
    
    # Duplicate each column in the rotated grid 2 times
    duplicated_grid = duplicate_cols(rotated_grid, 2)
    
    # Shift each column in the duplicated grid 3 positions to the right
    shifted_grid = shift_cols(duplicated_grid, 3)
    
    # Rotate the shifted grid 90 degrees clockwise again
    final_grid = rotate_90(shifted_grid)
    
    return final_grid

# Test the function
input1 = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 6, 6, 6, 0, 0, 0, 0, 0], [0, 6, 0, 0, 6, 0, 0, 0, 0], [0, 0, 6, 0, 0, 6, 0, 0, 0], [0, 0, 0, 6, 0, 0, 6, 0, 0], [0, 0, 0, 0, 6, 6, 6, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 0], [0, 0, 2, 0, 0, 2, 0, 0, 0], [0, 0, 0, 2, 2, 2, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 